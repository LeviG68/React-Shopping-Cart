{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","ack","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.2086edd9.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nflex-direction: column;\nwidth: 100%;\nborder: 1px solid lightblue;\nborder-radius: 20px;\nheight: 100%;\n\nbutton {\n    border-radius: 0 0 20px 20px;\n}\n\nimg {\n    max-height: 250px;\n    object-fit: cover;\n    border-radius: 20px 20px 0 0;\n}\n\ndiv {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 1rm;\n    height: 100%;\n}\n`;\n ","import Button from '@material-ui/core/Button';\n\n// Types\nimport { CartItemType } from '../App';\n\n// Styles\nimport { Wrapper } from './Item.styles';\n\n\ntype Props = {\n    item: CartItemType;\n    handleAddToCart: (clickedItem: CartItemType) => void;\n}\n\nconst Item: React.FC<Props> =({ item, handleAddToCart}) => ( \n<Wrapper>\n    <img src={item.image} alt={item.title} />\n    <div>\n        <h3>{item.title}</h3>\n        <p>{item.description}</p>\n        <h3>${item.price}</h3>\n    </div>\n    <Button onClick={() => handleAddToCart(item)} > Add to Cart </Button>\n</Wrapper>\n\n);\n\nexport default Item;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nfont-family: Arial, Helvetica, sans-serif;\nborder-bottom: 1px solid lightblue;\npadding-bottom: 20px;\n\ndiv {\n    flex: 1;\n\n}\n\n.information, .buttons {\n    display: flex;\n    justify-content: space-between;\n}\n\nimg {\n    max-width: 80px;\n    object-fits: cover;\n    margin-left: 40px;\n}\n`;","import Button from '@material-ui/core/Button';\n\n// Types\nimport  { CartItemType } from '../App';\n\n\n// Styles\nimport { Wrapper } from './CartItem.styles';\n\n\ntype Props ={\n    item: CartItemType;\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id: number) => void;\n}\n\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\n    <Wrapper>\n        <div>\n            <h3>{item.title}</h3>\n            <div className=\"information\">\n                <p>Price: ${item.price}</p>\n                <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\n            </div>\n            < div className='buttons'>\n                <Button\n                size=\"small\"\n                disableElevation\n                variant=\"contained\"\n                onClick={() => removeFromCart(item.id)}\n                >\n                    -\n                </Button>\n                <p>{item.amount}</p>\n                <Button\n                size=\"small\"\n                disableElevation\n                variant=\"contained\"\n                onClick={() => addToCart(item)}\n                >\n                    +\n                </Button>\n            </div>\n        </div>\n        <img src={item.image} alt={item.title} />\n    </Wrapper>\n);\n\nexport default CartItem;","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.aside`\n    font-family: Arial, Helventica, sans-serif; \n    width: 500px;\n    padding: 20px;\n`","\nimport CartItem from '../CartItem/CartItem';\n\n// Styles\nimport { Wrapper } from './Cart.styles';\n\n// Types\nimport { CartItemType } from '../App';\n\ntype Props = {\n    cartItems: CartItemType[];\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id: number) => void;\n\n};\n\nconst Cart: React.FC<Props> =({ cartItems, addToCart, removeFromCart}) => {\n\n    const calculateTotal =(items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0)\n\nreturn(\n    <Wrapper>\n        <h2>Your Shopping Cart</h2>\n        {cartItems.length === 0 ? <p>No Items in cart.</p> : null}\n        {cartItems.map(item => (\n            <CartItem \n            key={item.id}\n            item={item}\n            addToCart={addToCart}\n            removeFromCart={removeFromCart}\n             />\n        \n        ))}\n        <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n    </Wrapper>\n    )\n};\n\nexport default Cart;\n\n","\nimport styled from 'styled-components';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nexport const Wrapper = styled.div`\n    margin: 40px;\n    `;\n\n    export const StyledButton = styled(IconButton)`\n    position: fixed:\n    z-index: 100;\n    right: 20px;\n    top: 20px;\n    `;\n\n","import { useState} from 'react';\nimport { useQuery } from 'react-query';\n\n//components\nimport Item from './Item/Item';\nimport Cart from './Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n\n// Styles\nimport { Wrapper, StyledButton } from './App.styles';\n\n// Types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> => \nawait (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n\n  const[cartOpen, setCartOpen]= useState(false);\n  const[cartItems, setCartItems]= useState([] as CartItemType[]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>('products', \n  getProducts\n  );\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) => \n  items.reduce((ack: number, item) => ack + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      // 1. Is the Item already added in the cart?\n      const isItemInCart = prev.find(item => item.id === clickedItem.id);\n\n      if(isItemInCart) {\n        return prev.map(item => \n          item.id === clickedItem.id ? \n          {...item, amount: item.amount + 1 }\n          : item\n          );\n      }\n      //Frist time the item is added\n      return [...prev, {...clickedItem, amount: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems(prev => \n      prev.reduce((ack, item) => {\n          if(item.id === id) {\n            if(item.amount === 1) return ack;\n            return[...ack, {...item, amount: item.amount - 1}];\n          } else {\n            return [...ack, item];\n          }\n      }, [] as CartItemType[]) \n    );\n  };\n\n  if(isLoading) return <LinearProgress />;\n  if(error) return <div> Something went wrong ....</div>\n\n  return ( \n  <Wrapper>\n    <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n      <Cart \n      cartItems={cartItems} \n      addToCart={handleAddToCart}\n      removeFromCart={handleRemoveFromCart} \n      />\n    </Drawer>\n\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon/>\n          </Badge> \n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart}/>\n          </Grid>\n        ))}\n      </Grid>\n  </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />,\n    </QueryClientProvider>,\n    \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}